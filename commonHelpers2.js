/* empty css                      */import{i as k}from"./assets/vendor-ad859c2f.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();const K=document.querySelector(".btn-create"),z=document.querySelector(".model-create-close"),B=document.querySelector("#wordCounter"),M=document.querySelector("#titleTask"),w=document.querySelector(".model-create-list"),y=document.querySelector(".model-create-form"),O=document.querySelector(".wrap-taskes"),G=document.querySelectorAll("#wordCounterTask"),I=document.querySelector(".js-backgrop-model-create"),Y=document.querySelector(".js-backgrop-qustione"),C=document.querySelector(".task"),c={elWrap:document.querySelector(".qustione-wrap"),elDropChoose:document.querySelector(".drop-warp-choose span"),elComesChoose:document.querySelector(".comes-choose"),elDropIcon:document.querySelector(".drop-warp-icon "),langOf:document.querySelector(".choose-lang-of"),langOn:document.querySelector(".choose-lang-on"),langRes:document.querySelector(".res-lang")},L=document.querySelector(".taskes-container"),d={mode:"Choose word",lang:"Ukraine"};K.addEventListener("click",()=>{I.classList.add("is-open")});z.addEventListener("click",()=>{I.classList.remove("is-open")});B.addEventListener("input",n=>{const e=n.currentTarget.value-w.children.length;if(e===0)return;if(e<0){[...w.children].splice(e).forEach(s=>s.remove());return}let t="";for(let o=0;o<e;o++)t+='<li><input type="text" name="engl" required /><input type="text" name="ukr" required /></li>';w.insertAdjacentHTML("beforeend",t),t=""});y.addEventListener("submit",n=>{n.preventDefault();const e=JSON.parse(localStorage.getItem("saveWordLocal"))||[],t=M.value.trim(),o=B.value.trim().padStart(2,"0");if(t){if(o<2){k.error({message:"The number must not be less than 2",position:"topRight"});return}else if(e.some(({title:a})=>a===t)){k.error({message:"This title is already in use",position:"topRight"});return}}else{k.error({message:"Enter title to task",position:"topRight"});return}const s=[...y.elements.engl].map(a=>a.value.trim()),r=[...y.elements.ukr].map(a=>a.value.trim());e.push({title:t,English:s,Ukraine:r}),localStorage.setItem("saveWordLocal",JSON.stringify(e)),O.insertAdjacentHTML("beforeend",P(t,o)),k.success({message:"You successfully adding it's task",position:"topRight"}),M.value="",y.reset(),I.classList.remove("is-open"),N()});function P(n,e){return G.forEach(t=>t.textContent=e),`<div class="task-container"> 
  <button class="task-delete-btn" type="button">Delete</button>
  <h3 class="task-title">${n}</h3>
  <p>Word count: <span id="wordCounterTask">${e}</span></p>
  <p>
    Progress: <span id="wordProgress">00</span> /
    <span id="wordCounterTask">${e}</span>
  </p>
  <button class="task-start-btn animate-btn" type="button">Start</button></div>`}const J=JSON.parse(localStorage.getItem("saveWordLocal"))||[];if(J.length){const n=J.map(({title:e,Ukraine:t})=>P(e,String(t.length).padStart(2,"0")));O.innerHTML=n.join("")}O.addEventListener("click",n=>{if(n.target.nodeName!=="BUTTON")return;const e=n.target.closest(".task-container"),t=e.querySelector(".task-title").textContent,o=n.target.textContent;if(o==="Delete"){const r=JSON.parse(localStorage.getItem("saveWordLocal")).filter(({title:a})=>a!==t);localStorage.setItem("saveWordLocal",JSON.stringify(r)),e.remove(),k.info({message:`Task ${t} was deleted`,position:"topRight"})}else o==="Start"&&(Y.classList.add("is-open"),$("#accordion").accordion({collapsible:!0,active:!1,icons:!1,beforeActivate:()=>{c.elDropIcon.classList.toggle("drop-warp-icon-active")}}),JSON.parse(localStorage.getItem("saveWordLocal")).forEach(({title:r,English:a,Ukraine:i})=>{if(r===t){d.title=t,d.Ukraine=i,d.English=a,d.number=a.length;return}}),localStorage.setItem("currentSaveTask",JSON.stringify(d)))});c.elWrap.addEventListener("click",n=>{const e=n.target;if(e.nodeName!=="BUTTON"&&!e.closest(".qust-res-icon-btn"))return;const t=o=>{c.elComesChoose.textContent=o+":",c.elDropChoose.textContent=o,d.mode=o,$("#accordion").accordion("option","active",!1)};if(e.textContent==="Choose word"){t("Choose word");return}else if(e.textContent==="Enter word"){t("Enter word");return}else if(e.textContent==="Mixed"){t("Mixed");return}if(e.closest(".qust-res-icon-btn")){const o=c.langOf.textContent,s=c.langOn.textContent;d.lang=o,c.langOf.textContent=s,c.langOn.textContent=o,c.langRes.textContent=o,localStorage.setItem("currentSaveTask",JSON.stringify(d))}});function N(){const n=document.querySelectorAll("#wordProgress"),e=JSON.parse(localStorage.getItem("saveWordLocal"));n.forEach(t=>{const o=t.closest(".task-container").querySelector(".task-title");e.forEach(({title:s,choose:r})=>{o.textContent!==s||!r||(t.textContent=String(r.true).padStart(2,"0"))})})}N();const X=document.querySelector(".qustione-wrap"),R=document.querySelector(".task-header-text"),j=document.querySelector(".task-header-line"),U=document.querySelector(".js-backgrop-qustione");let T=0,h=0,q=0;X.addEventListener("click",n=>{n.target.textContent==="Go"?(D(),U.classList.remove("is-open")):n.target.textContent==="Exit"&&U.classList.remove("is-open")});function D(){T=0,h=0,q=0,j.style.width="0%",q=Date.now(),C.classList.add("is-open");const n=document.querySelector(".task-header-title"),e=JSON.parse(localStorage.getItem("currentSaveTask")),{number:t,lang:o,mode:s,Ukraine:r,English:a,title:i}=e;R.textContent=`00 / ${String(t).padStart(2,"0")}`,n.textContent=i;let l="";if(o==="Ukraine"?l="English":l="Ukraine",s==="Choose word"){let u="",S=0;const p=W(e[o]);for(const b of p){const x=e[o].indexOf(b),m=String(++S).padStart(2,"0"),g=String(t).padStart(2,"0");u+=`<div class="task-wrap">
        <div class="task-wrap-top">
          <p class="task-wrap-top-val">Value</p>
          <p class="task-wrap-top-count">${m} / ${g}</p>
        </div>
        <p class="task-wrap-word">${b}</p>
        <p class="task-wrap-text">Choose <span>the</span> appropriate term</p>
        <ul class="task-list">
        ${Z(e[l],x)}
        </ul>
        <button class="task-text-know" type="button">I don't know</button>
      </div>`}L.innerHTML=u}}function W(n){const e=[...n];for(let t=e.length-1;t>0;t--){const o=Math.floor(Math.random()*(t+1));[e[t],e[o]]=[e[o],e[t]]}return e}function Z(n,e){const t=n[e],o=`<li class="task-list-item"><button class="task-list-item-btn">${t}</button></li>`,s=W(n),r=[];let a=0;for(const i of s){if(a===3)break;if(i!==t){const l=`<li class="task-list-item"><button class="task-list-item-btn">${i}</button></li>`;r.push(l),a++}}return r.push(o),W(r).join("")}L.addEventListener("click",n=>{const e=n.target;if(e.closest(".task-res-btn-again")?(C.classList.remove("is-open"),D()):e.closest(".task-res-btn-exit")&&C.classList.remove("is-open"),e.nodeName!=="BUTTON"&&e.textContent!=="I don't know")return;const t=e.closest(".task-wrap");if(!t)return;const o=t.nextElementSibling,s=t.querySelector(".task-wrap-word").textContent,r=e.textContent,a=t.querySelectorAll(".task-list-item-btn"),i=t.querySelector(".task-text-know"),l=JSON.parse(localStorage.getItem("currentSaveTask")),{number:u,lang:S}=l;let p="";S==="Ukraine"?p="English":p="Ukraine";const b=l[S].indexOf(s),x=l[p].indexOf(r);b===x?(++h,e.classList.add("task-list-item-true"),t.classList.add("task-list-item-true"),setTimeout(m,1e3)):(e.textContent,e.classList.add("task-list-item-false"),t.classList.add("task-list-item-false"),setTimeout(m,1e3)),a.forEach(g=>g.disabled=!0);function m(){const g=String(++T).padStart(2,"0"),H=String(u).padStart(2,"0");if(R.textContent=`${g} / ${H}`,i.disabled=!0,T===u){const E=JSON.parse(localStorage.getItem("saveWordLocal"));E.forEach(A=>{if(A.title===l.title){A.choose={true:h,false:u-h};return}}),localStorage.setItem("saveWordLocal",JSON.stringify(E));const v=(h/u*100).toFixed(0);let f="";v>=80?f="it is incredibly!":v>=65?f="good job!":v>=50?f="you can do better (:":f="bad, practice more );";const V=_(Date.now()-q),Q=`<div class="task-res-wrap">
         <h3 class="task-res-title">${v}% correct, ${f}</h3>
         <p class="task-res-prg">In ${V} minutes!</p>
         <div>
           <button class="task-res-btn-exit animate-btn" type="button">
             Exit
             <svg width="25px" height="30px">
               <use href="./img/sprite.svg#icon-exit"></use>
             </svg>
           </button>
           <button class="task-res-btn-again animate-btn" type="button">
             Again
             <svg width="25px" height="30px">
               <use href="./img/sprite.svg#icon-again"></use>
             </svg>
           </button>
         </div>
       </div>`;L.insertAdjacentHTML("afterbegin",Q),document.querySelector(".task-res-wrap").scrollIntoView({behavior:"smooth",block:"center"}),N()}const F=(T/u*100).toFixed(2);j.style.width=`${F}%`,o&&o.scrollIntoView({behavior:"smooth",block:"center"})}});function _(n){const r=(n%864e5%36e5/6e4).toFixed(2),a=r.slice(2),i=parseInt(r);return a>=60?`${i+1}.${a-60}`:r}
//# sourceMappingURL=commonHelpers2.js.map
