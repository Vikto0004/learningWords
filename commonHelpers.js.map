{"version":3,"file":"commonHelpers.js","sources":["../src/js/create-word-task.js","../src/js/task-started.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst elBtnCreateOpen = document.querySelector('.btn-create');\nconst elBtnCreateClose = document.querySelector('.model-create-close');\nconst elWordCounter = document.querySelector('#wordCounter');\nconst elTitleTask = document.querySelector('#titleTask');\nconst elModelCreateList = document.querySelector('.model-create-list');\nconst elModelCreateForm = document.querySelector('.model-create-form');\n\nconst elWrapTaskes = document.querySelector('.wrap-taskes');\nconst elContainerTask = document.querySelector('.task-container');\nconst elWrapTaskTitle = document.querySelector('.task-title');\nconst elWordCounterTask = document.querySelectorAll('#wordCounterTask');\n\nconst elBackgropCreate = document.querySelector('.js-backgrop-model-create');\nconst elBackgropQustione = document.querySelector('.js-backgrop-qustione');\nconst elBackgropTask = document.querySelector('.task');\n\nconst qustWrap = {\n  elWrap: document.querySelector('.qustione-wrap'),\n  elDropChoose: document.querySelector('.drop-warp-choose span'),\n  elComesChoose: document.querySelector('.comes-choose'),\n  elDropIcon: document.querySelector('.drop-warp-icon '),\n  langOf: document.querySelector('.choose-lang-of'),\n  langOn: document.querySelector('.choose-lang-on'),\n  langRes: document.querySelector('.res-lang'),\n};\n\nconst elTaskesContainer = document.querySelector('.taskes-container');\n\nconst optionsTask = {\n  mode: 'Choose word',\n  lang: 'Ukraine',\n};\nexport { elTaskesContainer };\nexport { elBackgropTask };\n\nelBtnCreateOpen.addEventListener('click', () => {\n  elBackgropCreate.classList.add('is-open');\n});\n\nelBtnCreateClose.addEventListener('click', () => {\n  elBackgropCreate.classList.remove('is-open');\n});\n\n//* Adding and subtruction input for word in \"modal create\"\nelWordCounter.addEventListener('input', event => {\n  const numberItems =\n    event.currentTarget.value - elModelCreateList.children.length;\n\n  if (numberItems === 0) return;\n  else if (numberItems < 0) {\n    const arrChildrenList = [...elModelCreateList.children];\n    arrChildrenList.splice(numberItems).forEach(item => item.remove());\n    return;\n  }\n\n  let elItemsList = '';\n  for (let i = 0; i < numberItems; i++) {\n    elItemsList +=\n      '<li><input type=\"text\" name=\"engl\" required /><input type=\"text\" name=\"ukr\" required /></li>';\n  }\n\n  elModelCreateList.insertAdjacentHTML('beforeend', elItemsList);\n  elItemsList = '';\n});\n\n//* Adding word in local storage\nelModelCreateForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const saveWord = JSON.parse(localStorage.getItem('saveWordLocal')) || [];\n  const InpTitleVal = elTitleTask.value.trim();\n  const wordCounter = elWordCounter.value.trim().padStart(2, '0');\n\n  if (!InpTitleVal) {\n    iziToast.error({\n      message: 'Enter title to task',\n      position: 'topRight',\n    });\n    return;\n  } else if (wordCounter < 2) {\n    iziToast.error({\n      message: 'The number must not be less than 2',\n      position: 'topRight',\n    });\n    return;\n  } else if (saveWord.some(({ title }) => title === InpTitleVal)) {\n    iziToast.error({\n      message: 'This title is already in use',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  const English = [...elModelCreateForm.elements.engl].map(el =>\n    el.value.trim()\n  );\n  const arrUkrWord = [...elModelCreateForm.elements.ukr].map(el =>\n    el.value.trim()\n  );\n\n  saveWord.push({\n    title: InpTitleVal,\n    English: English,\n    Ukraine: arrUkrWord,\n  });\n  localStorage.setItem('saveWordLocal', JSON.stringify(saveWord));\n\n  elWrapTaskes.insertAdjacentHTML(\n    'beforeend',\n    addingWrapTask(InpTitleVal, wordCounter)\n  );\n\n  iziToast.success({\n    message: \"You successfully adding it's task\",\n    position: 'topRight',\n  });\n  elTitleTask.value = '';\n  elModelCreateForm.reset();\n  elBackgropCreate.classList.remove('is-open');\n});\n\n//* Return string wrap task\nfunction addingWrapTask(title, wordCounter) {\n  elWrapTaskTitle.textContent = title;\n  elWordCounterTask.forEach(el => (el.textContent = wordCounter));\n  return `<div class=\"task-container\">${elContainerTask.innerHTML}</div>`;\n}\n\n//* Adding all wrap task\nconst getSaveWord = JSON.parse(localStorage.getItem('saveWordLocal')) || [];\nif (getSaveWord.length) {\n  const taskWrapAll = getSaveWord.map(({ title, Ukraine }) => {\n    return addingWrapTask(title, String(Ukraine.length).padStart(2, '0'));\n  });\n  elWrapTaskes.innerHTML = taskWrapAll.join('');\n}\n\nelWrapTaskes.addEventListener('click', event => {\n  if (event.target.nodeName !== 'BUTTON') return;\n\n  //* Giving current elements\n  const elWrap = event.target.closest('.task-container');\n  const wrapTitle = elWrap.querySelector('.task-title').textContent;\n  const currentBtn = event.target.textContent;\n\n  //* Delete wrap\n  if (currentBtn === 'Delete') {\n    const getSaveWord = JSON.parse(localStorage.getItem('saveWordLocal'));\n    const upSaveWord = getSaveWord.filter(({ title }) => title !== wrapTitle);\n\n    localStorage.setItem('saveWordLocal', JSON.stringify(upSaveWord));\n    elWrap.remove();\n\n    iziToast.info({\n      message: `Task ${wrapTitle} was deleted`,\n      position: 'topRight',\n    });\n  } else if (currentBtn === 'Start') {\n    elBackgropQustione.classList.add('is-open');\n\n    $('#accordion').accordion({\n      collapsible: true,\n      active: false,\n      icons: false,\n      beforeActivate: () => {\n        qustWrap.elDropIcon.classList.toggle('drop-warp-icon-active');\n      },\n    });\n\n    const getSaveWord = JSON.parse(localStorage.getItem('saveWordLocal'));\n    getSaveWord.forEach(({ title, English, Ukraine }) => {\n      if (title === wrapTitle) {\n        optionsTask.title = wrapTitle;\n        optionsTask.Ukraine = Ukraine;\n        optionsTask.English = English;\n        optionsTask.number = English.length;\n        return;\n      }\n    });\n    localStorage.setItem('currentSaveTask', JSON.stringify(optionsTask));\n  }\n});\n\n//* Operations in settings options task\nqustWrap.elWrap.addEventListener('click', event => {\n  const elTarget = event.target;\n  if (elTarget.nodeName !== 'BUTTON' && !elTarget.closest('.qust-res-icon-btn'))\n    return;\n\n  //* Choose options in drop-list\n  const awardingAndClose = text => {\n    qustWrap.elComesChoose.textContent = text + ':';\n    qustWrap.elDropChoose.textContent = text;\n    optionsTask.mode = text;\n    $('#accordion').accordion('option', 'active', false);\n  };\n\n  if (elTarget.textContent === 'Choose word') {\n    awardingAndClose('Choose word');\n    return;\n  } else if (elTarget.textContent === 'Enter word') {\n    awardingAndClose('Enter word');\n    return;\n  } else if (elTarget.textContent === 'Mixed') {\n    awardingAndClose('Mixed');\n    return;\n  }\n\n  if (elTarget.closest('.qust-res-icon-btn')) {\n    //* Choose lang of/on\n    const langOfText = qustWrap.langOf.textContent;\n    const langOnText = qustWrap.langOn.textContent;\n    optionsTask.lang = langOfText;\n\n    qustWrap.langOf.textContent = langOnText;\n    qustWrap.langOn.textContent = langOfText;\n    qustWrap.langRes.textContent = langOfText;\n    localStorage.setItem('currentSaveTask', JSON.stringify(optionsTask));\n  }\n});\n\nfunction updProgress() {\n  const elWrdProgress = document.querySelectorAll('#wordProgress');\n  const getSaveWord = JSON.parse(localStorage.getItem('saveWordLocal'));\n\n  elWrdProgress.forEach(el => {\n    const elTitleTask = el\n      .closest('.task-container')\n      .querySelector('.task-title');\n    getSaveWord.forEach(({ title, choose }) => {\n      if (elTitleTask.textContent !== title || !choose) return;\n      el.textContent = String(choose.true).padStart(2, '0');\n    });\n  });\n}\nupdProgress();\n","import { elBackgropTask } from './create-word-task';\nimport { elTaskesContainer } from './create-word-task';\n\nconst elQustioneWrap = document.querySelector('.qustione-wrap');\nconst elHeaderCount = document.querySelector('.task-header-text');\nconst elHeaderLine = document.querySelector('.task-header-line');\n\nlet counterNumber = 0;\nlet chooseTrue = 0;\n\nelQustioneWrap.addEventListener('click', event => {\n  if (event.target.textContent === 'Go') {\n    startingTask();\n  }\n});\n\nfunction startingTask() {\n  elBackgropTask.classList.add('is-open');\n  const elTaskHeaderTitle = document.querySelector('.task-header-title');\n  const optionsTask = JSON.parse(localStorage.getItem('currentSaveTask'));\n  const { number, lang, mode, Ukraine, English, title } = optionsTask;\n\n  elHeaderCount.textContent = `00 / ${String(number).padStart(2, '0')}`;\n  elTaskHeaderTitle.textContent = title;\n\n  let language = '';\n  if (lang === 'Ukraine') language = 'English';\n  else language = 'Ukraine';\n\n  if (mode === 'Choose word') {\n    let markup = '';\n    let counter = 0;\n    const shuffledArr = shuffleArray(optionsTask[lang]);\n\n    for (const word of shuffledArr) {\n      const indexTrue = optionsTask[lang].indexOf(word);\n      const ofNumb = String(++counter).padStart(2, '0');\n      const onNumb = String(number).padStart(2, '0');\n\n      markup += `<div class=\"task-wrap\">\n        <div class=\"task-wrap-top\">\n          <p class=\"task-wrap-top-val\">Value</p>\n          <p class=\"task-wrap-top-count\">${ofNumb} / ${onNumb}</p>\n        </div>\n        <p class=\"task-wrap-word\">${word}</p>\n        <p class=\"task-wrap-text\">Choose <span>the</span> appropriate term</p>\n        <ul class=\"task-list\">\n        ${mixingItem(optionsTask[language], indexTrue)}\n        </ul>\n        <button class=\"task-text-know\" type=\"button\">I don't know</button>\n      </div>`;\n    }\n    elTaskesContainer.innerHTML = markup;\n  }\n}\n\n//* Shuffling array\nfunction shuffleArray(array) {\n  const newArr = [...array];\n  for (let i = newArr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n  }\n  return newArr;\n}\n\n//* Created elements to \"task-list\"\nfunction mixingItem(array, indexTrue) {\n  const trueWord = array[indexTrue];\n  const trueItem = `<li class=\"task-list-item\"><button class=\"task-list-item-btn\">${trueWord}</button></li>`;\n  const shuffleArr = shuffleArray(array);\n  const arrMarkup = [];\n\n  let countet = 0;\n  for (const word of shuffleArr) {\n    if (countet === 3) break;\n    else if (word !== trueWord) {\n      const el = `<li class=\"task-list-item\"><button class=\"task-list-item-btn\">${word}</button></li>`;\n      arrMarkup.push(el);\n      countet++;\n    }\n  }\n  arrMarkup.push(trueItem);\n  return shuffleArray(arrMarkup).join('');\n}\n\nelTaskesContainer.addEventListener('click', event => {\n  const elTarget = event.target;\n  if (elTarget.nodeName !== 'BUTTON' && elTarget.textContent !== \"I don't know\")\n    return;\n\n  //* Giving current value and elements\n  const elTaskWrap = elTarget.closest('.task-wrap');\n  const elTaskWrapNext = elTaskWrap.nextElementSibling;\n  const trueWord = elTaskWrap.querySelector('.task-wrap-word').textContent;\n  const chooseWord = elTarget.textContent;\n  const chooseWordAll = elTaskWrap.querySelectorAll('.task-list-item-btn');\n  const elBtnNotKnow = elTaskWrap.querySelector('.task-text-know');\n\n  const optionsTask = JSON.parse(localStorage.getItem('currentSaveTask'));\n  const { number, lang } = optionsTask;\n\n  let language = '';\n  if (lang === 'Ukraine') language = 'English';\n  else language = 'Ukraine';\n\n  const trueIndex = optionsTask[lang].indexOf(trueWord);\n  const chooseIndex = optionsTask[language].indexOf(chooseWord);\n\n  if (trueIndex === chooseIndex) {\n    ++chooseTrue;\n    elTarget.classList.add('task-list-item-true');\n    elTaskWrap.classList.add('task-list-item-true');\n    setTimeout(scrollNext, 1000);\n  } else if (elTarget.textContent === \"I don't know\") {\n    elTarget.classList.add('task-list-item-false');\n    elTaskWrap.classList.add('task-list-item-false');\n    setTimeout(scrollNext, 1000);\n  } else {\n    elTarget.classList.add('task-list-item-false');\n    elTaskWrap.classList.add('task-list-item-false');\n    setTimeout(scrollNext, 1000);\n  }\n\n  chooseWordAll.forEach(el => (el.disabled = true));\n  function scrollNext() {\n    const contNumb = String(++counterNumber).padStart(2, '0');\n    const numb = String(number).padStart(2, '0');\n\n    elHeaderCount.textContent = `${contNumb} / ${numb}`;\n    elBtnNotKnow.disabled = true;\n\n    if (counterNumber === number) {\n      const getSaveWord = JSON.parse(localStorage.getItem('saveWordLocal'));\n      getSaveWord.forEach(obj => {\n        if (obj.title === optionsTask.title) {\n          obj.choose = { true: chooseTrue, false: number - chooseTrue };\n          return;\n        }\n      });\n      localStorage.setItem('saveWordLocal', JSON.stringify(getSaveWord));\n    }\n\n    const lengthInPercent = ((counterNumber / number) * 100).toFixed(2);\n    elHeaderLine.style.width = `${lengthInPercent}%`;\n    if (!elTaskWrapNext) return;\n    elTaskWrapNext.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n    });\n  }\n});\n"],"names":["elBtnCreateOpen","elBtnCreateClose","elWordCounter","elTitleTask","elModelCreateList","elModelCreateForm","elWrapTaskes","elContainerTask","elWrapTaskTitle","elWordCounterTask","elBackgropCreate","elBackgropQustione","elBackgropTask","qustWrap","elTaskesContainer","optionsTask","event","numberItems","item","elItemsList","i","saveWord","InpTitleVal","wordCounter","iziToast","title","English","el","arrUkrWord","addingWrapTask","getSaveWord","taskWrapAll","Ukraine","elWrap","wrapTitle","currentBtn","upSaveWord","elTarget","awardingAndClose","text","langOfText","langOnText","updProgress","elWrdProgress","choose","elQustioneWrap","elHeaderCount","elHeaderLine","counterNumber","chooseTrue","startingTask","elTaskHeaderTitle","number","lang","mode","language","markup","counter","shuffledArr","shuffleArray","word","indexTrue","ofNumb","onNumb","mixingItem","array","newArr","j","trueWord","trueItem","shuffleArr","arrMarkup","countet","elTaskWrap","elTaskWrapNext","chooseWord","chooseWordAll","elBtnNotKnow","trueIndex","chooseIndex","scrollNext","contNumb","numb","obj","lengthInPercent"],"mappings":"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"}